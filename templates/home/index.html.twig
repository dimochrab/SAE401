{% extends 'base.html.twig' %}
{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('/Scss/app.scss') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
{% endblock %}
{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.comment-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const publicationId = formData.get('publicationId');
            const content = formData.get('content');

            fetch('/api/commentaire', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ content: content, publicationId: publicationId })
            })
            .then(response => response.json())
            .then(data => {
                if(data.error) {
                    console.error(data.error);
                } else {
                window.location.reload();
                }
            })
            .catch(error => console.error('Erreur:', error));
        });
    });
    document.getElementById('commentForm').addEventListener('submit', function() {
        // Trouvez le bouton de soumission dans le formulaire
        var submitButton = this.querySelector('button[type="submit"]');
        // Désactivez le bouton
        submitButton.disabled = true;
        // Changez le texte du bouton pour informer l'utilisateur
        submitButton.textContent = 'Envoi en cours...';
    });

document.querySelectorAll('.like-btn').forEach(btn => {
    btn.addEventListener('click', function() {
        const publicationId = this.getAttribute('data-publication-id');
        const liked = this.getAttribute('data-liked') === 'true';

        fetch(`/like/${publicationId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest' // Si vous utilisez des sessions Symfony
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log(data.message);
            // Actualiser le DOM en conséquence, par exemple en mettant à jour le nombre de likes
        })
        .catch(error => {
            console.error('There was an error!', error);
        });
    });
});
});

</script>
{% endblock %}

{% block body %}
<h2>Publications</h2>
<div class="publications">
    {% for publication in publications %}
        <div class="publication" id="publication-{{ publication.id }}">
            <div class="publication__header">
                <div class="publication__author">
                    <img src="{{ asset('uploads/' ~ publication.userID.profilePicture) }}" alt="Profil de {{ publication.userID.username |e }}">
                    <p>{{ publication.userID.username |e }}</p>
                </div>
                <p>{{ publication.dateTime|date('Y-m-d H:i') }}</p>
            </div>
            <div class="publication__content">
                {% if publication.fileType == 'image' %}
                    <img src="{{ asset('uploads/' ~ publication.postContent) }}" alt="Publication">
                {% elseif publication.fileType == 'video' %}
                    <video controls src="{{ asset('uploads/' ~ publication.postContent) }}"></video>
                {% endif %}
            </div>
            <div class="publication__likes">
                <div class='large-font text-center top-20'>
                    <i class="fas fa-heart like-icon" data-publication-id="{{ publication.id }}"></i>
                </div>
                <p>{{ publication.likesCount }} likes</p>
            </div>
            <div class="publication__comments">
                {% for commentaire in publication.commentaires %}
                    <div class="comment">
                        <img src="{{ asset('uploads/' ~ commentaire.userID.profilePicture) }}" alt="Profil de {{ commentaire.userID.username |e }}">
                        <p><strong>{{ commentaire.userID.username |e }}</strong>: {{ commentaire.content |e }}</p>
                        <p class="comment__date">{{ commentaire.dateTime|date('Y-m-d H:i') }}</p>
                    </div>
                {% endfor %}
            </div>

            <form id="commentForm" class="comment-form" data-publication-id="{{ data.publication.id }}" action="" method="post">
                <input type="text" name="content" placeholder="Ajoutez un commentaire..." required>
                <input type="hidden" name="publicationId" value="{{ data.publication.id }}">
                <button type="submit">Commenter</button>
            </form>
        </div>
    {% endfor %}
</div>
{% endblock %}

