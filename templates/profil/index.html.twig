{% extends 'base.html.twig' %}
{% block javascripts %}
<script type="module">
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.comment-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const publicationId = formData.get('publicationId');
            const content = formData.get('content');

            fetch('/api/commentaire', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ content: content, publicationId: publicationId })
            })
            .then(response => response.json())
            .then(data => {
                if(data.error) {
                    console.error(data.error);
                } else {
                window.location.reload();
                }
            })
            .catch(error => console.error('Erreur:', error));
        });
    });
document.querySelectorAll('.like-btn').forEach(button => {
    button.addEventListener('click', function(e) {
        const publicationId = this.dataset.publicationId;
        fetch(`/like/publication/${publicationId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ like: true }) // Assurez-vous que cela correspond à ce que votre backend attend
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const likesCountElement = this.previousElementSibling;
                let likesCount = parseInt(likesCountElement.textContent);
                if (this.textContent === 'Like') {
                    likesCountElement.textContent = `${++likesCount} likes`;
                    this.textContent = 'Liked';
                } else {
                    likesCountElement.textContent = `${--likesCount} likes`;
                    this.textContent = 'Like';
                }
            } else {
                alert('Une erreur est survenue.');
            }
        })
        .catch(error => console.error('Erreur:', error));
    });
});


});
</script>
{% endblock %}
{% block body %}
<img style="width: 100%" class="wave" src="{{ asset('img/wave.png') }}">

<!-- Affichage des informations de l'utilisateur -->
<div>
{% if app.user and app.user.username != user.username %}
        {% if isFollowedByCurrentUser %}
            <form action="{{ path('unfollow_route', {'username': user.username}) }}" method="POST">
                <button type="submit">Ne plus suivre</button>
            </form>
        {% else %}
            <form action="{{ path('follow_route', {'username': user.username}) }}" method="POST">
                <button type="submit">Suivre</button>
            </form>
        {% endif %}
    {% endif %}

    <div class="profil">
        <div class="imgprofil">
        <a href="{{ path('app_modify_profile') }}">
        <img class="profil-cov" src="{{ asset('/uploads/' ~ user.ProfilePicture) }}" alt="Photo de profile"></a>
        <img class="cover" src="{{ asset('/uploads/' ~ user.ProfileCover) }}" alt="Photo de cover">
</div>

<div class="info">
    <div class="info_stat">   
            <span class="material-symbols-outlined">psychiatry</span>
            <p>ecoScore : {{ user.ecoScore }}</p>
    </div>
    <div class="info_stat">   
        <span class="material-symbols-outlined">psychiatry</span>
        <p>Publications : {{ nombrePublications }}</p>
    </div>

    <div class="info_stat">   
        <span class="material-symbols-outlined">psychiatry</span>
        <p>Abonnés : {{ followersCount }}</p>
    </div>

    <div class="info_stat">   
        <span class="material-symbols-outlined">psychiatry</span>
        <p>Abonnements : {{ followingsCount }}</p>
    </div>
</div>
<div class="bio">
        <div class="bio-i">
            <h2>Profil de l’utilisateur</h2>
            <h1>{{ user.username }}</h1>
            <p>{{ user.Bio }}</p>
            <p>{{ user.email }}</p>
        </div>
        <div class="abone">
            <h2>Abonnés</h2>
            <ul>
                {% for follower in followers %}
                    <li>{{ follower.FollowerID.username }}</li>
                {% endfor %}
            </ul>
            </div>
        <div class="abonnements">
            <h2>Abonnements</h2>
            <ul>
                {% for following in followings %}
                    <li>{{ following.UserID.username }}</li>
                {% endfor %}
            </ul>
        </div>
</div>

<section>
<h2>Publications</h2>
<div class="publication-mosaic">
    {% for data in publicationsData %}
        <div class="publication">
            <a href="{{ path('app_profil', {username: data.publication.userID.username}) }}">
            <img src="{{ asset('uploads/' ~ data.publication.userID.profilePicture) }}" alt="Profil de {{ data.publication.userID.username | escape }}" style="width: 40px;"></a>
            <p>{{ data.publication.DateTime|date('Y-m-d H:i') }}</p>
            {% if data.fileType == 'image' %}
                <img src="{{ asset('uploads/' ~ data.publication.postContent) }}" alt="Publication">
            {% elseif data.fileType == 'video' %}
                <video controls src="{{ asset('uploads/' ~ data.publication.postContent) }}"></video>
            {% endif %}
            {% if data.isLikedByCurrentUser %}
            <button onclick="location.href='{{ path('like_publication', {'id': data.publication.id}) }}'">DisLike</button>
            {% else %}
                <button onclick="location.href='{{ path('like_publication', {'id': data.publication.id}) }}'">Like</button>
            {% endif %}
            <span>{{ data.likesCount }} likes</span>
            </div>
    {% else %}
        <p>Cet utilisateur n'a pas encore publié de contenu.</p>
    {% endfor %}
    </div>
</div>

</section>
{% endblock %}
