{% extends 'base.html.twig' %}
{% block javascripts %}
<script type="module">
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.comment-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const publicationId = formData.get('publicationId');
            const content = formData.get('content');

            fetch('/api/commentaire', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ content: content, publicationId: publicationId })
            })
            .then(response => response.json())
            .then(data => {
                if(data.error) {
                    console.error(data.error);
                } else {
                window.location.reload();
                }
            })
            .catch(error => console.error('Erreur:', error));
        });
    });
document.querySelectorAll('.heart').forEach(btn => {
    btn.addEventListener('click', function() {
        const publicationId = this.getAttribute('data-publication-id');
        const liked = this.getAttribute('data-liked') === 'true';

        fetch(`/like/${publicationId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest' // Si vous utilisez des sessions Symfony
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log(data.message);
            // Mettre à jour la couleur de l'icône en fonction de l'état "Like"
            const icon = this.querySelector('ion-icon');
            if (liked) {
                icon.style.color = '#ccc'; // Contour de l'icône
            } else {
                icon.style.color = 'var(--primary-color)'; // Couleur principale (ici utilisée en supposant que la variable CSS --primary-color est définie)
            }
            // Inverser l'état "Like"
            this.setAttribute('data-liked', (!liked).toString());
        })
        .catch(error => {
            console.error('There was an error!', error);
        });
    });
});
});
</script>
{% endblock %}
{% block body %}
<img style="width: 100%" class="wave" src="{{ asset('img/wave.png') }}">

<!-- Affichage des informations de l'utilisateur -->
<div>
{% if app.user and app.user.username != user.username %}
        {% if isFollowedByCurrentUser %}
            <form action="{{ path('unfollow_route', {'username': user.username}) }}" method="POST">
                <button type="submit">Ne plus suivre</button>
            </form>
        {% else %}
            <form action="{{ path('follow_route', {'username': user.username}) }}" method="POST">
                <button type="submit">Suivre</button>
            </form>
        {% endif %}
    {% endif %}

    <div class="profil">
        <div class="imgprofil">
        <a href="{{ path('app_modify_profile') }}">
        <img class="profil-cov" src="{{ asset('/uploads/' ~ user.ProfilePicture) }}" alt="Photo de profile"></a>
        <img class="cover" src="{{ asset('/uploads/' ~ user.ProfileCover) }}" alt="Photo de cover">
</div>

<div class="info">
    <div class="info_stat">   
            <span class="material-symbols-outlined">psychiatry</span>
            <p>ecoScore : {{ user.ecoScore }}</p>
    </div>
    <div class="info_stat">   
        <span class="material-symbols-outlined">psychiatry</span>
        <p>Publications : {{ nombrePublications }}</p>
    </div>

    <div class="info_stat">   
        <span class="material-symbols-outlined">psychiatry</span>
        <p>Abonnés : {{ followersCount }}</p>
    </div>

    <div class="info_stat">   
        <span class="material-symbols-outlined">psychiatry</span>
        <p>Abonnements : {{ followingsCount }}</p>
    </div>
</div>
<div class="bio">
        <div class="bio-i">
            <h2>Profil de l’utilisateur</h2>
            <h1>{{ user.username }}</h1>
            <p>{{ user.Bio }}</p>
            <p>{{ user.email }}</p>
        </div>
        <div class="abone">
            <h2>Abonnés</h2>
            <ul>
                {% for follower in followers %}
                    <li>{{ follower.FollowerID.username }}</li>
                {% endfor %}
            </ul>
            </div>
        <div class="abonnements">
            <h2>Abonnements</h2>
            <ul>
                {% for following in followings %}
                    <li>{{ following.UserID.username }}</li>
                {% endfor %}
            </ul>
        </div>
</div>

<section>
<h2>Publications</h2>
<div class="publication-mosaic">
    {% for data in publicationsData %}
        <div class="publication">
            <div class="publication__header">
            <a href="{{ path('app_profil', {username: data.publication.userID.username}) }}">
            <img src="{{ asset('uploads/' ~ data.publication.userID.profilePicture) }}" alt="Profil de {{ data.publication.userID.username | escape }}" style="height: 35px;"></a>
            <p> {{ data.publication.userID.username | escape }}</p>
            </div>
            <p>{{ data.publication.DateTime|date('Y-m-d H:i') }}</p>
            {% if data.fileType == 'image' %}
                <img src="{{ asset('uploads/' ~ data.publication.postContent) }}" alt="Publication">
            {% elseif data.fileType == 'video' %}
                <video controls src="{{ asset('uploads/' ~ data.publication.postContent) }}"></video>
            {% endif %}
            <div class="publication__likes">
            {% if data.isLikedByCurrentUser %}
                <button onclick="location.href='{{ path('like_publication', {'id': data.publication.id}) }}'" class="heart active">
                    <ion-icon name="leaf"></ion-icon>
                </button>

            {% else %}
                <button onclick="location.href='{{ path('like_publication', {'id': data.publication.id}) }}'" class="heart">
                    <ion-icon name="leaf-outline"></ion-icon>
                </button>
            {% endif %}
            <span>{{ data.likesCount }} likes</span>
            </div>
            <a href="{{ path('app_home', {'id': data.publication.id}) }}">Voir le post</a>

        </div>
    {% else %}
        <p>Cet utilisateur n'a pas encore publié de contenu.</p>
    {% endfor %}
    </div>
</div>

</section>
{% endblock %}
